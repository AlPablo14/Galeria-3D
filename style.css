* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

body {
  background: linear-gradient(to right, #2c5364, #0f2027);
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.slider {
  position: relative;
  width: 200px;
  height: 200px;
  /* La propiedad transform-style decide si los elementos anidados preservan las transformaciones 3D (preserve-3D) o no (flat).
   En nuestro caso querermos que nuestro elemento .slider tenga transform-style:preserve-3d ya que querermos que los elementos hijos 
   tengan un aspecto tridimensional (3d) */
  transform-style: preserve-3d;
  animation: rotate 25s linear infinite;
}

@keyframes rotate {
  0% {
    transform: perspective(1000px) rotateY(0deg);
  }
  100% {
    transform: perspective(1000px) rotateY(360deg);
  }
}

.slider span {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  transform-origin: center;
  transform-style: preserve-3d;
  /* Metemos una funci√≥n para establecer que el movimiento de todos los elementos sea siempre el mismo */
  transform: rotateY(calc(var(--i) * 45deg)) translateZ(350px);
}

.slider span img {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  border-radius: 10px;
  /* El objeto me lo fijas */
  object-fit: cover;
  transition: 1s;
}
.slider span:hover img {
  transform: translateY(-50px) scale(1.2);
}
